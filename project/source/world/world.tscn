[gd_scene load_steps=7 format=3 uid="uid://dc6up85jkv08n"]

[ext_resource type="MeshLibrary" uid="uid://disg3gkmsf1dn" path="res://resource/mesh_lib/mesh_lib.tres" id="1_x28rg"]
[ext_resource type="Texture2D" uid="uid://g83wiqfacchj" path="res://resource/skybox/skybox.png" id="2_0rihf"]

[sub_resource type="GDScript" id="GDScript_l5mj3"]
script/source = "
extends GridMap

@onready var object_tiles = {
	\"tree\":preload(\"res://source/world/tree.tscn\"),
	}

@onready var player = get_parent().get_parent().get_node(\"Player\")

var moisture = FastNoiseLite.new()      # 湿度
var temperature = FastNoiseLite.new()   # 温度
var altitude = FastNoiseLite.new()      # 海拔

var chunk_width = 16    # 单区块宽
var chunk_height = 16   # 单区块高

var chunk_x_num = 6   # 区块X轴渲染数
var chunk_y_num = 6   # 区块Y轴渲染数

var generated_chunks = {}

var biome_list = {
	\"deep_ocean\":{}, # 深海群系
	\"ocean\":{}, # 海洋群系
	\"shoal\":{}, # 浅滩群系
	\"beach\":{}, # 沙滩群系
	\"plains\":[
		[3,2],[4,2],
		[3,3],[4,3],
		[3,4],[4,4],
		[3,5],[4,5],
		[3,6],[4,6],
	],# 平原群系
	\"coniferous\":{}, # 针叶林群系
	\"jungle\":{}, # 热带雨林群系
	\"desert\":{}, # 沙漠群系
	\"mountain\":{}, # 山脉群系
}

var biome_data = {
	\"deep_ocean\":{}, # 深海群系
	\"ocean\":{}, # 海洋群系
	\"shoal\":{}, # 浅滩群系
	\"beach\":{}, # 沙滩群系
	\"plains\":{\"tree\":0.1}, # 平原群系
	\"coniferous\":{}, # 针叶林群系
	\"jungle\":{}, # 热带雨林群系
	\"desert\":{}, # 沙漠群系
	\"mountain\":{}, # 山脉群系
}

func _ready():
	moisture.seed = randi()
	temperature.seed = randi()
	altitude.seed = randi()

func _physics_process(delta):
	generate_chunks_around_player(player.transform.origin)

func generate_chunks_around_player(position):
	
	var tile_pos = local_to_map(position)
	var current_chunk = Vector2(int(tile_pos.x / chunk_width), int(tile_pos.z / chunk_height))
	
	for x in range(current_chunk.x - (chunk_x_num - 1), current_chunk.x + chunk_x_num):
		for y in range(current_chunk.y - (chunk_y_num - 1), current_chunk.y + chunk_y_num):
			if not generated_chunks.has(Vector2(x, y)):
				generate_chunk(Vector2(x, y))
				generated_chunks[Vector2(x, y)] = true

func generate_chunk(chunk_pos):
	var chunk_x = chunk_pos.x
	var chunk_y = chunk_pos.y
	
	for x in range(chunk_width):
		for y in range(chunk_height):
			var real_x = chunk_x * chunk_width + x
			var real_y = chunk_y * chunk_height + y
			
			var moisture_noise = moisture.get_noise_2d(real_x, real_y) * 45
			var temperature_noise = temperature.get_noise_2d(real_x, real_y) * 45
			var altitude_noise = altitude.get_noise_2d(real_x, real_y) * 45
			
			var select_x = round(moisture_noise + 45) / 10
			var select_y = round(temperature_noise + 45) / 10
			
			# 深海
			if -100 < altitude_noise and altitude_noise <= -10:
				set_cell_item(Vector3(real_x,0,real_y),1)
			# 海洋
			elif -10 < altitude_noise and altitude_noise <= 0:
				set_cell_item(Vector3(real_x,0,real_y),1)
			# 浅滩
			elif 0 < altitude_noise and altitude_noise <= 6:
				set_cell_item(Vector3(real_x,0,real_y),1)
			# 海滩
			elif 6 < altitude_noise and altitude_noise <= 9:
				set_cell_item(Vector3(real_x,0,real_y),2)
			# 湿度温度地形
			else:
				set_cell_item(Vector3(real_x,0,real_y),0)
				
				var tile_probability = randf()
				if tile_probability <= 0.1:
					var tree_instantiate = object_tiles[\"tree\"].instantiate()
					tree_instantiate.transform.origin = Vector3(real_x, 0, real_y)
					add_child(tree_instantiate)
			
			var land_tile_data = get_cell_item(Vector3(real_x, 0, real_y))
			
			if land_tile_data == 3 or land_tile_data == 4:
				var tile_probability = randf()
				if tile_probability <= 0.1:
					var tree_instantiate = object_tiles[\"tree\"].instantiate()
					tree_instantiate.transform.origin = Vector3(real_x, 0, real_y)
					add_child(tree_instantiate)
			
"

[sub_resource type="PanoramaSkyMaterial" id="PanoramaSkyMaterial_c6i7r"]
panorama = ExtResource("2_0rihf")

[sub_resource type="Sky" id="Sky_dkf4e"]
sky_material = SubResource("PanoramaSkyMaterial_c6i7r")

[sub_resource type="Environment" id="Environment_s75xv"]
background_mode = 2
sky = SubResource("Sky_dkf4e")
tonemap_mode = 2
glow_enabled = true
glow_bloom = 0.06
glow_blend_mode = 0
fog_light_color = Color(1, 1, 1, 1)
fog_light_energy = 0.3
volumetric_fog_enabled = true

[node name="World" type="Node3D"]

[node name="GridMap" type="GridMap" parent="."]
mesh_library = ExtResource("1_x28rg")
cell_size = Vector3(1, 1, 1)
script = SubResource("GDScript_l5mj3")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_s75xv")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.927184, 0.157723, -0.339785, 0, 0.907044, 0.421035, 0.374607, 0.390378, -0.840996, 0, 0, 0)
light_color = Color(1, 0.627451, 0, 1)
light_energy = 1.2
shadow_enabled = true
